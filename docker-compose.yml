services:
  api:
    image: doconnor/movies-api:1.0
    container_name: movies-api
    ports:
      - '9000:9000'
    environment:
      - MONGODB_URI=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017
      - REDIS_URI=redis://redis
      - ENABLE_WRITING_HANDLERS=false
    networks:
      - api-network
      - redis-network
    depends_on:
      - mongodb
      - redis
    restart: always

  mongodb:
    image: mongo:8.0-rc
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    networks:
      - api-network
      - mongo-network
    volumes:
      - mongodb_data:/data/db

  mongodb-seed:
    image: mongo:8.0-rc
    container_name: mongodb-seed
    networks:
      - mongo-network
    depends_on:
      - mongodb
    volumes:
      - ./seeding.json:/seeding.json
    command: mongoimport --host mongodb --db tmdb_movies --collection movies --authenticationDatabase admin --username ${MONGODB_USERNAME} --password ${MONGODB_PASSWORD} --drop --jsonArray --file ./seeding.json
    profiles:
      - dev
    links:
      - mongodb

  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - redis-network
    ports:
      - '6379:6379'

  mongo-express:
    image: mongo-express:1.0-20-alpine3.19
    container_name: mongo-express
    restart: always
    ports:
      - '8081:8081'
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=mongodb 
    depends_on:
      - mongodb
    networks:
      - mongo-network
    profiles:
      - dev

networks:
  api-network:
    name: api-network
  mongo-network:
    name: mongo-network
  redis-network:
    name: redis-network

volumes:
  mongodb_data: