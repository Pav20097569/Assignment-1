services:
  # Movies API Service
  api:
    image: doconnor/movies-api:1.0
    container_name: movies-api
    ports:
      - '9000:9000'
    environment:
      MONGODB_URI: mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongo:27017
      REDIS_URI: redis://redis:6379
      ENABLE_WRITING_HANDLERS: 'false'
    depends_on:
      - mongo
      - redis
    networks:
      - backend


  mongo:
    image: mongo:8.0-rc
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    volumes:
      - mongo_data:/data/db
    networks:
      - backend

 
  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - backend


  mongo-express:
    image: mongo-express:1.0-20-alpine3.19
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo
    ports:
      - "8081:8081" 
    networks:
      - backend
  

  mongodb-seed:
    image: mongo:8.0-rc
    container_name: mongodb-seed
    depends_on:
      - mongo  
    volumes:
      - ./seeding.json:/mongodb-init/seeding.json  
    networks:
      - backend
    command: mongoimport --host mongo --db movies_dbdocker --collection movies --username ${MONGODB_USERNAME} --password ${MONGODB_PASSWORD} --drop --jsonArray --file /mongodb-init/seeding.json


networks:
  backend:

volumes:
  mongo_data:
